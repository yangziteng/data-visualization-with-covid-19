{"remainingRequest":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\BasicTrendChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\BasicTrendChart\\index.vue","mtime":1674390938212},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js","mtime":1678158409280},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1678158409891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsKdmFyIGNoYXJ0ID0gbnVsbDsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB0aXRsZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgZGF0YTogT2JqZWN0CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQ6IGZ1bmN0aW9uIGluaXRDaGFydCgpIHsKICAgICAgaWYgKG51bGwgIT0gY2hhcnQgJiYgdW5kZWZpbmVkICE9IGNoYXJ0KSB7CiAgICAgICAgY2hhcnQuZGlzcG9zZSgpOwogICAgICB9CgogICAgICBjaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmJhc2ljVHJlbmRDaGFydCk7CiAgICAgIHRoaXMuc2V0T3B0aW9ucygpOwogICAgfSwKICAgIHNldE9wdGlvbnM6IGZ1bmN0aW9uIHNldE9wdGlvbnMoKSB7CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6IHRoaXMudGl0bGUsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFdlaWdodDogJ25vcm1hbCcsCiAgICAgICAgICAgIGZvbnRTaXplOiAxNiwKICAgICAgICAgICAgY29sb3I6ICcjRjFGMUYzJwogICAgICAgICAgfSwKICAgICAgICAgIGxlZnQ6ICc2JScKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzU3NjE3QicKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBpY29uOiAncmVjdCcsCiAgICAgICAgICBpdGVtV2lkdGg6IDE0LAogICAgICAgICAgaXRlbUhlaWdodDogNSwKICAgICAgICAgIGl0ZW1HYXA6IDEzLAogICAgICAgICAgZGF0YTogWyfntK/orqHnoa7or4onLCAn5aKD5aSW6L6T5YWl5paw5aKeJ10sCiAgICAgICAgICByaWdodDogJzQlJywKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBmb250U2l6ZTogMTIsCiAgICAgICAgICAgIGNvbG9yOiAnI0JDQkNCRicKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIGxlZnQ6ICczJScsCiAgICAgICAgICByaWdodDogJzQlJywKICAgICAgICAgIGJvdHRvbTogJzMlJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlLAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNTc2MTdCJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogdGhpcy5kYXRhLmRhdGVMaXN0CiAgICAgICAgfV0sCiAgICAgICAgeUF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgbmFtZTogJ+WNleS9je+8iOS+i++8iScsCiAgICAgICAgICBheGlzVGljazogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzU3NjE3QicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBtYXJnaW46IDEwLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBmb250U2l6ZTogMTQKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICB3aWR0aDogMCwKICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMTI4LCAxMjgsIDEyOCwgMC41KScKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH1dLAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICflooPlpJbovpPlhaXmlrDlop4nLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgc3ltYm9sOiAnY2lyY2xlJywKICAgICAgICAgIHN5bWJvbFNpemU6IDUsCiAgICAgICAgICBzaG93U3ltYm9sOiBmYWxzZSwKICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICB3aWR0aDogMwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDEsIDAsIFt7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMTYsOTcsMjA0LCAwLjMpJwogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG9mZnNldDogMC44LAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDE3LDIzNSwyMTAsIDApJwogICAgICAgICAgICAgIH1dLCBmYWxzZSksCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuMSknLAogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgY29sb3I6IG5ldyBlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwgMCwgMSwgMCwgW3sKICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgxNiw5NywyMDQsMSknCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDE3LDIzNSwyMTAsMSknCiAgICAgICAgICAgICAgfV0pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgY29sb3I6ICdyZ2IoMCwxOTYsMTMyKScsCiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDAsMTk2LDEzMiwwLjIpJywKICAgICAgICAgICAgICBleHRyYUNzc1RleHQ6ICdib3gtc2hhZG93OiA4cHggOHB4IDhweCByZ2JhKDAsIDAsIDAsIDEpOycsCiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHRoaXMuZGF0YS5pbXBvcnRlZEluY3JEYXRhTGlzdAogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICfntK/orqHnoa7or4onLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgc3ltYm9sOiAnY2lyY2xlJywKICAgICAgICAgIHN5bWJvbFNpemU6IDUsCiAgICAgICAgICBzaG93U3ltYm9sOiBmYWxzZSwKICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICB3aWR0aDogMwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDEsIFt7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMjA1LDUyLDQyLCAwLjUpJwogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG9mZnNldDogMC44LAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDIzNSwyMzUsMjEsIDApJwogICAgICAgICAgICAgIH1dLCBmYWxzZSksCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuMSknLAogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgY29sb3I6IG5ldyBlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwgMCwgMSwgMCwgW3sKICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgyMDUsNTIsNDIsMSknCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDIzNSwyMzUsMjEsMSknCiAgICAgICAgICAgICAgfV0pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgY29sb3I6ICdyZ2IoOTksMjUwLDIzNSknLAogICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAncmdiYSg5OSwyNTAsMjM1LDAuMiknLAogICAgICAgICAgICAgIGV4dHJhQ3NzVGV4dDogJ2JveC1zaGFkb3c6IDhweCA4cHggOHB4IHJnYmEoMCwgMCwgMCwgMSk7JywKICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogdGhpcy5kYXRhLkNvbmZpcm1lZERhdGFMaXN0CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgY2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgZGF0YTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgewogICAgICAgIGlmIChvbGRWYWx1ZSAhPSBuZXdWYWx1ZSkgewogICAgICAgICAgdGhpcy5zZXRPcHRpb25zKCk7CiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGEpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 累计趋势 -->\r\n<template>\r\n  <div ref=\"basicTrendChart\" style=\"width: 100%; height: 100%\" />\r\n</template>\r\n<script>\r\nimport * as echarts from 'echarts'\r\nlet chart = null\r\nexport default {\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    data: Object\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      if (null != chart && undefined != chart) {\r\n        chart.dispose()\r\n      }\r\n      chart = this.$echarts.init(this.$refs.basicTrendChart)\r\n      this.setOptions()\r\n    },\r\n    setOptions() {\r\n      let option = {\r\n        title: {\r\n          text: this.title,\r\n          textStyle: {\r\n            fontWeight: 'normal',\r\n            fontSize: 16,\r\n            color: '#F1F1F3'\r\n          },\r\n          left: '6%'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            lineStyle: {\r\n              color: '#57617B'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          icon: 'rect',\r\n          itemWidth: 14,\r\n          itemHeight: 5,\r\n          itemGap: 13,\r\n          data: ['累计确诊', '境外输入新增'],\r\n          right: '4%',\r\n          textStyle: {\r\n            fontSize: 12,\r\n            color: '#BCBCBF'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#57617B'\r\n            }\r\n          },\r\n          data: this.data.dateList\r\n        }],\r\n        yAxis: [{\r\n          type: 'value',\r\n          name: '单位（例）',\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#57617B'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            margin: 10,\r\n            textStyle: {\r\n              fontSize: 14\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              width: 0,\r\n              color: 'rgba(128, 128, 128, 0.5)'\r\n            }\r\n          }\r\n        }],\r\n        series: [{\r\n          name: '境外输入新增',\r\n          type: 'line',\r\n          smooth: true,\r\n          symbol: 'circle',\r\n          symbolSize: 5,\r\n          showSymbol: false,\r\n          lineStyle: {\r\n            normal: {\r\n              width: 3\r\n            }\r\n          },\r\n          areaStyle: {\r\n            normal: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                offset: 0,\r\n                color: 'rgba(16,97,204, 0.3)'\r\n              }, {\r\n                offset: 0.8,\r\n                color: 'rgba(17,235,210, 0)'\r\n              }], false),\r\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n              shadowBlur: 10\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                offset: 0,\r\n                color: 'rgba(16,97,204,1)'\r\n              }, {\r\n                offset: 1,\r\n                color: 'rgba(17,235,210,1)'\r\n              }])\r\n            },\r\n            emphasis: {\r\n              color: 'rgb(0,196,132)',\r\n              borderColor: 'rgba(0,196,132,0.2)',\r\n              extraCssText: 'box-shadow: 8px 8px 8px rgba(0, 0, 0, 1);',\r\n              borderWidth: 2\r\n            }\r\n          },\r\n          data: this.data.importedIncrDataList\r\n        }, {\r\n          name: '累计确诊',\r\n          type: 'line',\r\n          smooth: true,\r\n          symbol: 'circle',\r\n          symbolSize: 5,\r\n          showSymbol: false,\r\n          lineStyle: {\r\n            normal: {\r\n              width: 3\r\n            }\r\n          },\r\n          areaStyle: {\r\n            normal: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                offset: 0,\r\n                color: 'rgba(205,52,42, 0.5)'\r\n              }, {\r\n                offset: 0.8,\r\n                color: 'rgba(235,235,21, 0)'\r\n              }], false),\r\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n              shadowBlur: 10\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                offset: 0,\r\n                color: 'rgba(205,52,42,1)'\r\n              }, {\r\n                offset: 1,\r\n                color: 'rgba(235,235,21,1)'\r\n              }])\r\n            },\r\n            emphasis: {\r\n              color: 'rgb(99,250,235)',\r\n              borderColor: 'rgba(99,250,235,0.2)',\r\n              extraCssText: 'box-shadow: 8px 8px 8px rgba(0, 0, 0, 1);',\r\n              borderWidth: 2\r\n            }\r\n          },\r\n          data: this.data.ConfirmedDataList\r\n        },\r\n       ]\r\n      }\r\n      chart.setOption(option)\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler (newValue, oldValue) {\r\n        if (oldValue != newValue) {\r\n          this.setOptions()\r\n          console.log(this.data)\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/components/BasicTrendChart"}]}