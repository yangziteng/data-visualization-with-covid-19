{"remainingRequest":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\CurrentConfirmedCompareBarChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\CurrentConfirmedCompareBarChart\\index.vue","mtime":1674316079896},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js","mtime":1678158409280},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1678158409891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsKdmFyIGNoYXJ0ID0gbnVsbDsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB0aXRsZTogU3RyaW5nLAogICAgZGF0YTogT2JqZWN0CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQ6IGZ1bmN0aW9uIGluaXRDaGFydCgpIHsKICAgICAgaWYgKG51bGwgIT0gY2hhcnQgJiYgdW5kZWZpbmVkICE9IGNoYXJ0KSB7CiAgICAgICAgY2hhcnQuZGlzcG9zZSgpOwogICAgICB9CgogICAgICBjaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmN1cnJlbnRDb25maXJtZWRDb21vYXJlQmFyQ2hhcnQpOwogICAgICB0aGlzLnNldE9wdGlvbnMoKTsKICAgIH0sCiAgICBzZXRPcHRpb25zOiBmdW5jdGlvbiBzZXRPcHRpb25zKCkgewogICAgICB2YXIgb3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiB0aGlzLnRpdGxlLAogICAgICAgICAgeDogJ2NlbnRlcicsCiAgICAgICAgICB5OiAwLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiAnI0I0QjRCNCcsCiAgICAgICAgICAgIGZvbnRTaXplOiAxNCwKICAgICAgICAgICAgZm9udFdlaWdodDogJ25vcm1hbCcKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8vIGJhY2tncm91bmRDb2xvcjogJyMxOTFFNDAnLAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMjU1LDI1NSwyNTUsMC45KScsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnc2hhZG93JywKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyM3QjdEREMnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgZGF0YTogWyfntK/orqHmsrvmhIgnLCAn57Sv6K6h56Gu6K+KJ10sCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICcjQjRCNEI0JwogICAgICAgICAgfSwKICAgICAgICAgIHRvcDogJzUlJwogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgeDogJzEyJScsCiAgICAgICAgICB3aWR0aDogJzgyJScsCiAgICAgICAgICB5OiAnMTIlJwogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIGRhdGE6IHRoaXMuZGF0YS5kYXRlTGlzdCwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0I0QjRCNCcKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogW3sKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0I0QjRCNCcKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9ICcKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBzcGxpdExpbmU6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNCNEI0QjQnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSAnCiAgICAgICAgICB9CiAgICAgICAgfV0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+e0r+iuoeayu+aEiCcsCiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIGJhcldpZHRoOiAxMCwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBiYXJCb3JkZXJSYWRpdXM6IDUsCiAgICAgICAgICAgICAgY29sb3I6IG5ldyBlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwgMCwgMCwgMSwgW3sKICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgIGNvbG9yOiAnIzk1NkZENCcKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgICBjb2xvcjogJyMzRUFDRTUnCiAgICAgICAgICAgICAgfV0pCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEuY3VyZWRDb3VudExpc3QKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAn57Sv6K6h56Gu6K+KJywKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgYmFyR2FwOiAnLTEwMCUnLAogICAgICAgICAgYmFyV2lkdGg6IDEwLAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czogNSwKICAgICAgICAgICAgICBjb2xvcjogbmV3IGVjaGFydHMuZ3JhcGhpYy5MaW5lYXJHcmFkaWVudCgwLCAwLCAwLCAxLCBbewogICAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDExOSw2MCwyNDMsMC43KScKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAuMywKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgxMTksNjAsMjQzLDAuNSknCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDExOSw2MCwyNDMsMCknCiAgICAgICAgICAgICAgfV0pCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB6OiAtMTIsCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEuY29uZmlybWVkQ291bnRMaXN0CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgY2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgZGF0YTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgewogICAgICAgIGlmIChvbGRWYWx1ZSAhPSBuZXdWYWx1ZSkgewogICAgICAgICAgdGhpcy5zZXRPcHRpb25zKCk7CiAgICAgICAgfQogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div\r\n    ref=\"currentConfirmedComoareBarChart\"\r\n    style=\"width: 100%; height: 100%\"\r\n  ></div>\r\n</template>\r\n<script>\r\nimport * as echarts from 'echarts'\r\nlet chart = null\r\nexport default {\r\n  props: {\r\n    title: String,\r\n    data: Object\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      if (null != chart && undefined != chart) {\r\n        chart.dispose()\r\n      }\r\n      chart = this.$echarts.init(this.$refs.currentConfirmedComoareBarChart)\r\n      this.setOptions()\r\n    },\r\n    setOptions() {\r\n      let option = {\r\n        title: {\r\n          text: this.title,\r\n          x: 'center',\r\n          y: 0,\r\n          textStyle: {\r\n            color: '#B4B4B4',\r\n            fontSize: 14,\r\n            fontWeight: 'normal',\r\n          },\r\n\r\n        },\r\n        // backgroundColor: '#191E40',\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          backgroundColor: 'rgba(255,255,255,0.9)',\r\n          axisPointer: {\r\n            type: 'shadow',\r\n            label: {\r\n              show: true,\r\n              backgroundColor: '#7B7DDC'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['累计治愈', '累计确诊'],\r\n          textStyle: {\r\n            color: '#B4B4B4'\r\n          },\r\n          top: '5%',\r\n        },\r\n        grid: {\r\n          x: '12%',\r\n          width: '82%',\r\n          y: '12%',\r\n        },\r\n        xAxis: {\r\n          data: this.data.dateList,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#B4B4B4'\r\n            }\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n        },\r\n        yAxis: [{\r\n          splitLine: { show: false },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#B4B4B4',\r\n            }\r\n          },\r\n          axisLabel: {\r\n            formatter: '{value} ',\r\n          }\r\n        },\r\n        {\r\n          splitLine: { show: false },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#B4B4B4',\r\n            }\r\n          },\r\n          axisLabel: {\r\n            formatter: '{value} ',\r\n          }\r\n        }],\r\n        series: [\r\n          {\r\n            name: '累计治愈',\r\n            type: 'bar',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              normal: {\r\n                barBorderRadius: 5,\r\n                color: new echarts.graphic.LinearGradient(\r\n                  0, 0, 0, 1,\r\n                  [\r\n                    { offset: 0, color: '#956FD4' },\r\n                    { offset: 1, color: '#3EACE5' }\r\n                  ]\r\n                )\r\n              }\r\n            },\r\n            data: this.data.curedCountList\r\n          },\r\n          {\r\n            name: '累计确诊',\r\n            type: 'bar',\r\n            barGap: '-100%',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              normal: {\r\n                barBorderRadius: 5,\r\n                color: new echarts.graphic.LinearGradient(\r\n                  0, 0, 0, 1,\r\n                  [\r\n                    { offset: 0, color: 'rgba(119,60,243,0.7)' },\r\n                    { offset: 0.3, color: 'rgba(119,60,243,0.5)' },\r\n                    { offset: 1, color: 'rgba(119,60,243,0)' }\r\n                  ]\r\n                )\r\n              }\r\n            },\r\n            z: -12,\r\n            data: this.data.confirmedCountList\r\n          },\r\n        ]\r\n      }\r\n      chart.setOption(option)\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler (newValue, oldValue) {\r\n        if (oldValue != newValue) {\r\n          this.setOptions()\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/components/CurrentConfirmedCompareBarChart"}]}