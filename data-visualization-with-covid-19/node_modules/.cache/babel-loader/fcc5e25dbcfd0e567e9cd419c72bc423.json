{"remainingRequest":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\ProvinceRankingBarChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\ProvinceRankingBarChart\\index.vue","mtime":1674316079898},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js","mtime":1678158409280},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1678158409891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cyc7CnZhciBjaGFydCA9IG51bGw7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgZGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBwcm92aW5jZUxpc3Q6IFtdLAogICAgICAgICAgdmFsdWVMaXN0OiBbXQogICAgICAgIH07CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRDaGFydDogZnVuY3Rpb24gaW5pdENoYXJ0KCkgewogICAgICBpZiAobnVsbCAhPSBjaGFydCAmJiB1bmRlZmluZWQgIT0gY2hhcnQpIHsKICAgICAgICBjaGFydC5kaXNwb3NlKCk7CiAgICAgIH0KCiAgICAgIGNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMucHJvdmluY2VSYW5raW5nQmFyQ2hhcnQpOwogICAgICB0aGlzLnNldE9wdGlvbnMoKTsKICAgIH0sCiAgICBzZXRPcHRpb25zOiBmdW5jdGlvbiBzZXRPcHRpb25zKCkgewogICAgICB2YXIgc2FsdlByb1ZhbHVlID0gdGhpcy5kYXRhLnZhbHVlTGlzdDsKICAgICAgdmFyIHNhbHZQcm9NYXggPSBbXTsgLy/og4zmma/mjInmnIDlpKflgLwKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2FsdlByb1ZhbHVlLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgc2FsdlByb01heC5wdXNoKHNhbHZQcm9WYWx1ZVswXSk7CiAgICAgIH0KCiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgLy8gYmFja2dyb3VuZENvbG9yOiAiIzAwMzM2NiIsCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogJzIlJywKICAgICAgICAgIHJpZ2h0OiAnMiUnLAogICAgICAgICAgYm90dG9tOiAnMiUnLAogICAgICAgICAgdG9wOiAnMiUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnbm9uZScKICAgICAgICAgIH0sCiAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihwYXJhbXMpIHsKICAgICAgICAgICAgcmV0dXJuIHBhcmFtc1swXS5uYW1lICsgJyA6ICcgKyBwYXJhbXNbMF0udmFsdWU7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgfSwKICAgICAgICB5QXhpczogW3sKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBpbnZlcnNlOiB0cnVlLAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEucHJvdmluY2VMaXN0CiAgICAgICAgfSwgewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGludmVyc2U6IHRydWUsCiAgICAgICAgICBheGlzVGljazogJ25vbmUnLAogICAgICAgICAgYXhpc0xpbmU6ICdub25lJywKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmZmZmJywKICAgICAgICAgICAgICBmb250U2l6ZTogJzEyJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogc2FsdlByb1ZhbHVlCiAgICAgICAgfV0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+WAvCcsCiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIHpsZXZlbDogMSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBiYXJCb3JkZXJSYWRpdXM6IDMwLAogICAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDEsIDAsIFt7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYigyLDE2MywyNTQsMSknCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2IoMTI1LDY0LDI1NSwxKScKICAgICAgICAgICAgICB9XSkKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGJhcldpZHRoOiAyMCwKICAgICAgICAgIGRhdGE6IHNhbHZQcm9WYWx1ZQogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICfog4zmma8nLAogICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICBiYXJXaWR0aDogMjAsCiAgICAgICAgICBiYXJHYXA6ICctMTAwJScsCiAgICAgICAgICBkYXRhOiBzYWx2UHJvTWF4LAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgyNCwzMSw2OCwxKScsCiAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiAzMAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgY2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgZGF0YTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKG5ld0xpc3QsIG9sZExpc3QpIHsKICAgICAgICBpZiAob2xkTGlzdCAhPSBuZXdMaXN0KSB7CiAgICAgICAgICB0aGlzLnNldE9wdGlvbnMoKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AAQA,OAAA,KAAA,OAAA,MAAA,SAAA;AACA,IAAA,KAAA,GAAA,IAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA;AACA,UAAA,YAAA,EAAA,EADA;AAEA,UAAA,SAAA,EAAA;AAFA,SAAA;AAIA;AAPA;AADA,GADA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,QAAA,KAAA,IAAA,SAAA,IAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA;AACA;;AACA,MAAA,KAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,uBAAA,CAAA;AACA,WAAA,UAAA;AACA,KAPA;AAQA,IAAA,UARA,wBAQA;AACA,UAAA,YAAA,GAAA,KAAA,IAAA,CAAA,SAAA;AACA,UAAA,UAAA,GAAA,EAAA,CAFA,CAEA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,YAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,CAAA;AACA;;AACA,UAAA,MAAA,GAAA;AACA;AACA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,GAAA,EAAA,IAJA;AAKA,UAAA,YAAA,EAAA;AALA,SAFA;AASA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAFA;AAKA,UAAA,SAAA,EAAA,mBAAA,MAAA,EAAA;AACA,mBAAA,MAAA,CAAA,CAAA,CAAA,CAAA,IAAA,GAAA,KAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,KAAA;AACA;AAPA,SATA;AAkBA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAlBA;AAsBA,QAAA,KAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,OAAA,EAAA,IAFA;AAGA,UAAA,SAAA,EAAA;AACA,YAAA,IAAA,EAAA,IADA;AAEA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AAFA,WAHA;AASA,UAAA,SAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WATA;AAYA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAZA;AAeA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAfA;AAkBA,UAAA,IAAA,EAAA,KAAA,IAAA,CAAA;AAlBA,SAAA,EAmBA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,OAAA,EAAA,IAFA;AAGA,UAAA,QAAA,EAAA,MAHA;AAIA,UAAA,QAAA,EAAA,MAJA;AAKA,UAAA,IAAA,EAAA,IALA;AAMA,UAAA,SAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA,SADA;AAEA,cAAA,QAAA,EAAA;AAFA;AADA,WANA;AAYA,UAAA,IAAA,EAAA;AAZA,SAnBA,CAtBA;AAuDA,QAAA,MAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,GADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,MAAA,EAAA,CAHA;AAIA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,eAAA,EAAA,EADA;AAEA,cAAA,KAAA,EAAA,IAAA,OAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAAA,EAGA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAHA,CAAA;AAFA;AADA,WAJA;AAgBA,UAAA,QAAA,EAAA,EAhBA;AAiBA,UAAA,IAAA,EAAA;AAjBA,SAAA,EAmBA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,QAAA,EAAA,EAHA;AAIA,UAAA,MAAA,EAAA,OAJA;AAKA,UAAA,IAAA,EAAA,UALA;AAMA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,KAAA,EAAA,kBADA;AAEA,cAAA,eAAA,EAAA;AAFA;AADA;AANA,SAnBA;AAvDA,OAAA;AAyFA,MAAA,KAAA,CAAA,SAAA,CAAA,MAAA;AACA;AAxGA,GAZA;AAsHA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,OADA,mBACA,OADA,EACA,OADA,EACA;AACA,YAAA,OAAA,IAAA,OAAA,EAAA;AACA,eAAA,UAAA;AACA;AACA,OALA;AAMA,MAAA,IAAA,EAAA;AANA;AADA;AAtHA,CAAA","sourcesContent":["<template>\r\n  <div\r\n    ref=\"provinceRankingBarChart\"\r\n    style=\"width: 100%; height: 100%\"\r\n    />\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nlet chart = null\r\nexport default {\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default () {\r\n        return {\r\n          provinceList: [],\r\n          valueList: []\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      if (null != chart && undefined != chart) {\r\n        chart.dispose()\r\n      }\r\n      chart = this.$echarts.init(this.$refs.provinceRankingBarChart)\r\n      this.setOptions()\r\n    },\r\n    setOptions() {\r\n      var salvProValue = this.data.valueList;\r\n      var salvProMax = [];//背景按最大值\r\n      for (let i = 0; i < salvProValue.length; i++) {\r\n        salvProMax.push(salvProValue[0])\r\n      }\r\n      let option = {\r\n        // backgroundColor: \"#003366\",\r\n        grid: {\r\n          left: '2%',\r\n          right: '2%',\r\n          bottom: '2%',\r\n          top: '2%',\r\n          containLabel: true\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'none'\r\n          },\r\n          formatter: function (params) {\r\n            return params[0].name + ' : ' + params[0].value\r\n          }\r\n        },\r\n        xAxis: {\r\n          show: false,\r\n          type: 'value'\r\n        },\r\n        yAxis: [{\r\n          type: 'category',\r\n          inverse: true,\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              color: '#fff'\r\n            },\r\n          },\r\n          splitLine: {\r\n            show: false\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          data: this.data.provinceList\r\n        }, {\r\n          type: 'category',\r\n          inverse: true,\r\n          axisTick: 'none',\r\n          axisLine: 'none',\r\n          show: true,\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: '#ffffff',\r\n              fontSize: '12'\r\n            },\r\n          },\r\n          data: salvProValue\r\n        }],\r\n        series: [{\r\n          name: '值',\r\n          type: 'bar',\r\n          zlevel: 1,\r\n          itemStyle: {\r\n            normal: {\r\n              barBorderRadius: 30,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                offset: 0,\r\n                color: 'rgb(2,163,254,1)'\r\n              }, {\r\n                offset: 1,\r\n                color: 'rgb(125,64,255,1)'\r\n              }]),\r\n            },\r\n          },\r\n          barWidth: 20,\r\n          data: salvProValue\r\n        },\r\n        {\r\n          name: '背景',\r\n          type: 'bar',\r\n          barWidth: 20,\r\n          barGap: '-100%',\r\n          data: salvProMax,\r\n          itemStyle: {\r\n            normal: {\r\n              color: 'rgba(24,31,68,1)',\r\n              barBorderRadius: 30,\r\n            }\r\n          },\r\n        },\r\n        ]\r\n      }\r\n      chart.setOption(option)\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler(newList, oldList) {\r\n        if (oldList != newList) {\r\n          this.setOptions()\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/components/ProvinceRankingBarChart"}]}