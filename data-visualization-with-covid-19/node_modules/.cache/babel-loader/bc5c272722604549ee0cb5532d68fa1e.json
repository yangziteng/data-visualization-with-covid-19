{"remainingRequest":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\CuredAndDeadRateChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\CuredAndDeadRateChart\\index.vue","mtime":1674316079895},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js","mtime":1678158409280},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1678158409891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;AAIA,IAAA,KAAA,GAAA,IAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,CAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,QAAA,KAAA,IAAA,SAAA,IAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA;AACA;;AACA,MAAA,KAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,SAAA,CAAA;AACA,WAAA,UAAA;AACA,KAPA;AAQA,IAAA,UARA,wBAQA;AACA,UAAA,aAAA,GAAA,CAAA,KAAA,IAAA,CAAA,SAAA,EAAA,KAAA,IAAA,CAAA,SAAA,EAAA,KAAA,IAAA,CAAA,SAAA,CAAA;AACA,UAAA,YAAA,GAAA,CAAA,KAAA,IAAA,CAAA,QAAA,EAAA,KAAA,IAAA,CAAA,QAAA,EAAA,KAAA,IAAA,CAAA,QAAA,CAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,KAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,CAAA,KAAA,IAAA,CAAA,SAAA,GAAA,GAAA,EAAA,OAAA,CAAA,CAAA,IAAA,OADA;AAEA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,EADA;AAEA,YAAA,UAAA,EAAA,iBAFA;AAGA,YAAA,UAAA,EAAA,QAHA;AAIA,YAAA,KAAA,EAAA,SAJA;AAKA,YAAA,IAAA,EAAA;AACA,cAAA,CAAA,EAAA;AACA,gBAAA,QAAA,EAAA;AADA;AADA;AALA,WAFA;AAaA,UAAA,CAAA,EAAA,MAbA;AAcA,UAAA,CAAA,EAAA;AAdA,SAAA,EAeA;AACA,UAAA,IAAA,EAAA,CAAA,KAAA,IAAA,CAAA,QAAA,GAAA,GAAA,EAAA,OAAA,CAAA,CAAA,IAAA,OADA;AAEA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,EADA;AAEA,YAAA,UAAA,EAAA,iBAFA;AAGA,YAAA,UAAA,EAAA,QAHA;AAIA,YAAA,KAAA,EAAA,SAJA;AAKA,YAAA,IAAA,EAAA;AACA,cAAA,CAAA,EAAA;AACA,gBAAA,QAAA,EAAA;AADA;AADA;AALA,WAFA;AAaA,UAAA,CAAA,EAAA,KAbA;AAcA,UAAA,CAAA,EAAA;AAdA,SAfA,CADA;AAgCA,QAAA,OAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,GAAA,EAAA,KAHA;AAIA,UAAA,QAAA,EAAA,CAAA;AACA,YAAA,IAAA,EAAA,MADA;AAEA,YAAA,CAAA,EAAA,GAFA;AAGA,YAAA,IAAA,EAAA,IAHA;AAIA,YAAA,GAAA,EAAA,QAJA;AAKA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,SADA;AAEA,cAAA,IAAA,EAAA,KAFA;AAGA,cAAA,IAAA,EAAA;AAHA;AALA,WAAA;AAJA,SAAA,EAeA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,IAAA,EAAA,OAFA;AAGA,UAAA,GAAA,EAAA,KAHA;AAIA,UAAA,QAAA,EAAA,CAAA;AACA,YAAA,IAAA,EAAA,MADA;AAEA,YAAA,CAAA,EAAA,GAFA;AAGA,YAAA,IAAA,EAAA,IAHA;AAIA,YAAA,GAAA,EAAA,QAJA;AAKA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,SADA;AAEA,cAAA,IAAA,EAAA,KAFA;AAGA,cAAA,IAAA,EAAA;AAHA;AALA,WAAA;AAJA,SAfA,CAhCA;AA+DA,QAAA,MAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,YADA;AAEA,UAAA,MAAA,EAAA,KAFA;AAGA,UAAA,MAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAHA;AAIA;AACA,UAAA,IAAA,EAAA,aALA;AAMA,UAAA,eAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,QADA;AAEA,cAAA,CAAA,EAAA,CAFA;AAGA,cAAA,CAAA,EAAA,CAHA;AAIA,cAAA,EAAA,EAAA,GAJA;AAKA,cAAA,EAAA,EAAA,CALA;AAMA,cAAA,UAAA,EAAA,CAAA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAAA,EAGA;AACA,gBAAA,MAAA,EAAA,GADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAHA,EAMA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eANA,CANA;AAgBA,cAAA,WAAA,EAAA;AAhBA;AADA,WANA;AA0BA,UAAA,OAAA,EAAA;AACA,YAAA,cAAA,EAAA,CADA;AAEA,YAAA,SAAA,EAAA;AACA,cAAA,WAAA,EAAA,CADA;AAEA,cAAA,WAAA,EAAA;AACA,gBAAA,IAAA,EAAA,QADA;AAEA,gBAAA,CAAA,EAAA,CAFA;AAGA,gBAAA,CAAA,EAAA,CAHA;AAIA,gBAAA,EAAA,EAAA,CAJA;AAKA,gBAAA,EAAA,EAAA,CALA;AAMA,gBAAA,UAAA,EAAA,CAAA;AACA,kBAAA,MAAA,EAAA,CADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBAAA,EAGA;AACA,kBAAA,MAAA,EAAA,GADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBAHA,EAMA;AACA,kBAAA,MAAA,EAAA,CADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBANA,CANA;AAgBA,gBAAA,WAAA,EAAA;AAhBA,eAFA;AAoBA,cAAA,UAAA,EAAA,EApBA;AAqBA,cAAA,WAAA,EAAA;AArBA;AAFA,WA1BA;AAoDA,UAAA,SAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,QADA;AAEA,cAAA,CAAA,EAAA,CAFA;AAGA,cAAA,CAAA,EAAA,CAHA;AAIA,cAAA,EAAA,EAAA,CAJA;AAKA,cAAA,EAAA,EAAA,CALA;AAMA,cAAA,UAAA,EAAA,CAAA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAAA,EAGA;AACA,gBAAA,MAAA,EAAA,GADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAHA,EAMA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eANA,CANA;AAgBA,cAAA,WAAA,EAAA;AAhBA;AADA,WApDA;AAwEA,UAAA,KAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,SAAA,EAAA;AADA;AADA;AAxEA,SAAA,EA8EA;AACA;AACA,UAAA,IAAA,EAAA,YADA;AAEA,UAAA,MAAA,EAAA,KAFA;AAGA,UAAA,MAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAHA;AAIA;AACA,UAAA,IAAA,EAAA,YALA;AAMA,UAAA,eAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,QADA;AAEA,cAAA,CAAA,EAAA,CAFA;AAGA,cAAA,CAAA,EAAA,CAHA;AAIA,cAAA,EAAA,EAAA,GAJA;AAKA,cAAA,EAAA,EAAA,CALA;AAMA,cAAA,UAAA,EAAA,CAAA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAAA,EAGA;AACA,gBAAA,MAAA,EAAA,GADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAHA,EAMA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eANA,CANA;AAgBA,cAAA,WAAA,EAAA;AAhBA;AADA,WANA;AA0BA,UAAA,OAAA,EAAA;AACA,YAAA,cAAA,EAAA,CADA;AAEA,YAAA,SAAA,EAAA;AACA,cAAA,WAAA,EAAA,CADA;AAEA,cAAA,WAAA,EAAA;AACA,gBAAA,IAAA,EAAA,QADA;AAEA,gBAAA,CAAA,EAAA,CAFA;AAGA,gBAAA,CAAA,EAAA,CAHA;AAIA,gBAAA,EAAA,EAAA,CAJA;AAKA,gBAAA,EAAA,EAAA,CALA;AAMA,gBAAA,UAAA,EAAA,CAAA;AACA,kBAAA,MAAA,EAAA,CADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBAAA,EAGA;AACA,kBAAA,MAAA,EAAA,GADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBAHA,EAMA;AACA,kBAAA,MAAA,EAAA,CADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBANA,CANA;AAgBA,gBAAA,WAAA,EAAA;AAhBA,eAFA;AAoBA,cAAA,UAAA,EAAA,EApBA;AAqBA,cAAA,WAAA,EAAA;AArBA;AAFA,WA1BA;AAoDA,UAAA,SAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,QADA;AAEA,cAAA,CAAA,EAAA,CAFA;AAGA,cAAA,CAAA,EAAA,CAHA;AAIA,cAAA,EAAA,EAAA,CAJA;AAKA,cAAA,EAAA,EAAA,CALA;AAMA,cAAA,UAAA,EAAA,CAAA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAAA,EAGA;AACA,gBAAA,MAAA,EAAA,GADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eAHA,EAMA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA;AAFA,eANA,CANA;AAgBA,cAAA,WAAA,EAAA;AAhBA;AADA,WApDA;AAwEA,UAAA,KAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,SAAA,EAAA;AADA;AADA;AAxEA,SA/EA;AA/DA,OAAA,CAHA,CAgOA;;AACA,MAAA,KAAA,CAAA,SAAA,CAAA,MAAA;AACA;AA1OA,GAVA;AAsPA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,OADA,mBACA,QADA,EACA,QADA,EACA;AACA,YAAA,QAAA,IAAA,QAAA,EAAA;AACA,eAAA,UAAA;AACA;AACA,OALA;AAMA,MAAA,IAAA,EAAA;AANA;AADA;AAtPA,CAAA","sourcesContent":["<template>\r\n  <div ref=\"rateChart\" style=\"width: 100%; height: 100%\"></div>\r\n</template>\r\n<script>\r\nlet chart = null\r\nexport default {\r\n  props: {\r\n    title: String,\r\n    data: Object,\r\n  },\r\n  data () {\r\n    return {\r\n      d: 99\r\n    }\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      if (null != chart && undefined != chart) {\r\n        chart.dispose()\r\n      }\r\n      chart = this.$echarts.init(this.$refs.rateChart)\r\n      this.setOptions()\r\n    },\r\n    setOptions() {\r\n      let curedRateData = [this.data.curedRate, this.data.curedRate, this.data.curedRate];\r\n      let deadRateData = [this.data.deadRate, this.data.deadRate, this.data.deadRate]\r\n      let option = {\r\n        title: [{\r\n          text: (this.data.curedRate * 100).toFixed(2) + '{a|%}',\r\n          textStyle: {\r\n            fontSize: 20,\r\n            fontFamily: 'Microsoft Yahei',\r\n            fontWeight: 'normal',\r\n            color: '#bcb8fb',\r\n            rich: {\r\n              a: {\r\n                fontSize: 16,\r\n              }\r\n            }\r\n          },\r\n          x: '20px',\r\n          y: '30%'\r\n        },{\r\n          text: (this.data.deadRate * 100).toFixed(2) + '{a|%}',\r\n          textStyle: {\r\n            fontSize: 20,\r\n            fontFamily: 'Microsoft Yahei',\r\n            fontWeight: 'normal',\r\n            color: '#bcb8fb',\r\n            rich: {\r\n              a: {\r\n                fontSize: 16,\r\n              }\r\n            }\r\n          },\r\n          x: '60%',\r\n          y: '30%'\r\n        }],\r\n        graphic: [{\r\n          type: 'group',\r\n          left: '30px',\r\n          top: '60%',\r\n          children: [{\r\n            type: 'text',\r\n            z: 100,\r\n            left: '10',\r\n            top: 'middle',\r\n            style: {\r\n              fill: '#aab2fa',\r\n              text: '治愈率',\r\n              font: '16px Microsoft YaHei'\r\n            }\r\n          }]\r\n        },{\r\n          type: 'group',\r\n          left: '170px',\r\n          top: '60%',\r\n          children: [{\r\n            type: 'text',\r\n            z: 100,\r\n            left: '10',\r\n            top: 'middle',\r\n            style: {\r\n              fill: '#aab2fa',\r\n              text: '死亡率',\r\n              font: '16px Microsoft YaHei'\r\n            }\r\n          }]\r\n        }],\r\n        series: [{\r\n          type: 'liquidFill',\r\n          radius: '80%',\r\n          center: ['20%', '50%'],\r\n          //  shape: 'roundRect',\r\n          data: curedRateData,\r\n          backgroundStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 1,\r\n              y: 0,\r\n              x2: 0.5,\r\n              y2: 1,\r\n              colorStops: [{\r\n                offset: 1,\r\n                color: 'rgba(68, 145, 253, 0)'\r\n              }, {\r\n                offset: 0.5,\r\n                color: 'rgba(68, 145, 253, .25)'\r\n              }, {\r\n                offset: 0,\r\n                color: 'rgba(68, 145, 253, 1)'\r\n              }],\r\n              globalCoord: false\r\n            },\r\n          },\r\n          outline: {\r\n            borderDistance: 0,\r\n            itemStyle: {\r\n              borderWidth: 5,\r\n              borderColor: {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [{\r\n                  offset: 0,\r\n                  color: 'rgba(69, 73, 240, 0)'\r\n                }, {\r\n                  offset: 0.5,\r\n                  color: 'rgba(69, 73, 240, .25)'\r\n                }, {\r\n                  offset: 1,\r\n                  color: 'rgba(69, 73, 240, 1)'\r\n                }],\r\n                globalCoord: false\r\n              },\r\n              shadowBlur: 10,\r\n              shadowColor: '#000',\r\n            }\r\n          },\r\n          itemStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [{\r\n                offset: 1,\r\n                color: 'rgba(58, 71, 212, 0)'\r\n              }, {\r\n                offset: 0.5,\r\n                color: 'rgba(31, 222, 225, .2)'\r\n              }, {\r\n                offset: 0,\r\n                color: 'rgba(31, 222, 225, 1)'\r\n              }],\r\n              globalCoord: false\r\n            },\r\n          },\r\n          label: {\r\n            normal: {\r\n              formatter: '',\r\n            }\r\n          }\r\n        },\r\n        // 死亡率\r\n        {\r\n          type: 'liquidFill',\r\n          radius: '80%',\r\n          center: ['70%', '50%'],\r\n          //  shape: 'roundRect',\r\n          data: deadRateData,\r\n          backgroundStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 1,\r\n              y: 0,\r\n              x2: 0.5,\r\n              y2: 1,\r\n              colorStops: [{\r\n                offset: 1,\r\n                color: 'rgba(68, 145, 253, 0)'\r\n              }, {\r\n                offset: 0.5,\r\n                color: 'rgba(68, 145, 253, .25)'\r\n              }, {\r\n                offset: 0,\r\n                color: 'rgba(68, 145, 253, 1)'\r\n              }],\r\n              globalCoord: false\r\n            },\r\n          },\r\n          outline: {\r\n            borderDistance: 0,\r\n            itemStyle: {\r\n              borderWidth: 5,\r\n              borderColor: {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [{\r\n                  offset: 0,\r\n                  color: 'rgba(69, 73, 240, 0)'\r\n                }, {\r\n                  offset: 0.5,\r\n                  color: 'rgba(69, 73, 240, .25)'\r\n                }, {\r\n                  offset: 1,\r\n                  color: 'rgba(69, 73, 240, 1)'\r\n                }],\r\n                globalCoord: false\r\n              },\r\n              shadowBlur: 10,\r\n              shadowColor: '#000',\r\n            }\r\n          },\r\n          itemStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [{\r\n                offset: 1,\r\n                color: 'rgba(58, 71, 212, 0)'\r\n              }, {\r\n                offset: 0.5,\r\n                color: 'rgba(31, 222, 225, .2)'\r\n              }, {\r\n                offset: 0,\r\n                color: 'rgba(31, 222, 225, 1)'\r\n              }],\r\n              globalCoord: false\r\n            },\r\n          },\r\n          label: {\r\n            normal: {\r\n              formatter: '',\r\n            }\r\n          }\r\n        }]\r\n      };\r\n      // \r\n      chart.setOption(option)\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler (newValue, oldValue) {\r\n        if (oldValue != newValue) {\r\n          this.setOptions()\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/components/CuredAndDeadRateChart"}]}