{"remainingRequest":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\CurrentConfirmedCompareBarChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\CurrentConfirmedCompareBarChart\\index.vue","mtime":1674316079896},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js","mtime":1678158409280},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1678158409891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnDQpsZXQgY2hhcnQgPSBudWxsDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgdGl0bGU6IFN0cmluZywNCiAgICBkYXRhOiBPYmplY3QNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGluaXRDaGFydCAoKSB7DQogICAgICBpZiAobnVsbCAhPSBjaGFydCAmJiB1bmRlZmluZWQgIT0gY2hhcnQpIHsNCiAgICAgICAgY2hhcnQuZGlzcG9zZSgpDQogICAgICB9DQogICAgICBjaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmN1cnJlbnRDb25maXJtZWRDb21vYXJlQmFyQ2hhcnQpDQogICAgICB0aGlzLnNldE9wdGlvbnMoKQ0KICAgIH0sDQogICAgc2V0T3B0aW9ucygpIHsNCiAgICAgIGxldCBvcHRpb24gPSB7DQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgdGV4dDogdGhpcy50aXRsZSwNCiAgICAgICAgICB4OiAnY2VudGVyJywNCiAgICAgICAgICB5OiAwLA0KICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgY29sb3I6ICcjQjRCNEI0JywNCiAgICAgICAgICAgIGZvbnRTaXplOiAxNCwNCiAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnLA0KICAgICAgICAgIH0sDQoNCiAgICAgICAgfSwNCiAgICAgICAgLy8gYmFja2dyb3VuZENvbG9yOiAnIzE5MUU0MCcsDQogICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsDQogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgyNTUsMjU1LDI1NSwwLjkpJywNCiAgICAgICAgICBheGlzUG9pbnRlcjogew0KICAgICAgICAgICAgdHlwZTogJ3NoYWRvdycsDQogICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICBzaG93OiB0cnVlLA0KICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjN0I3RERDJw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgZGF0YTogWyfntK/orqHmsrvmhIgnLCAn57Sv6K6h56Gu6K+KJ10sDQogICAgICAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICBjb2xvcjogJyNCNEI0QjQnDQogICAgICAgICAgfSwNCiAgICAgICAgICB0b3A6ICc1JScsDQogICAgICAgIH0sDQogICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICB4OiAnMTIlJywNCiAgICAgICAgICB3aWR0aDogJzgyJScsDQogICAgICAgICAgeTogJzEyJScsDQogICAgICAgIH0sDQogICAgICAgIHhBeGlzOiB7DQogICAgICAgICAgZGF0YTogdGhpcy5kYXRhLmRhdGVMaXN0LA0KICAgICAgICAgIGF4aXNMaW5lOiB7DQogICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjQjRCNEI0Jw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgYXhpc1RpY2s6IHsNCiAgICAgICAgICAgIHNob3c6IGZhbHNlLA0KICAgICAgICAgIH0sDQogICAgICAgIH0sDQogICAgICAgIHlBeGlzOiBbew0KICAgICAgICAgIHNwbGl0TGluZTogeyBzaG93OiBmYWxzZSB9LA0KICAgICAgICAgIGF4aXNMaW5lOiB7DQogICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjQjRCNEI0JywNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIGF4aXNMYWJlbDogew0KICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSAnLA0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIHNwbGl0TGluZTogeyBzaG93OiBmYWxzZSB9LA0KICAgICAgICAgIGF4aXNMaW5lOiB7DQogICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjQjRCNEI0JywNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIGF4aXNMYWJlbDogew0KICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSAnLA0KICAgICAgICAgIH0NCiAgICAgICAgfV0sDQogICAgICAgIHNlcmllczogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIG5hbWU6ICfntK/orqHmsrvmhIgnLA0KICAgICAgICAgICAgdHlwZTogJ2JhcicsDQogICAgICAgICAgICBiYXJXaWR0aDogMTAsDQogICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgbm9ybWFsOiB7DQogICAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiA1LA0KICAgICAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KA0KICAgICAgICAgICAgICAgICAgMCwgMCwgMCwgMSwNCiAgICAgICAgICAgICAgICAgIFsNCiAgICAgICAgICAgICAgICAgICAgeyBvZmZzZXQ6IDAsIGNvbG9yOiAnIzk1NkZENCcgfSwNCiAgICAgICAgICAgICAgICAgICAgeyBvZmZzZXQ6IDEsIGNvbG9yOiAnIzNFQUNFNScgfQ0KICAgICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgICAgICkNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGRhdGE6IHRoaXMuZGF0YS5jdXJlZENvdW50TGlzdA0KICAgICAgICAgIH0sDQogICAgICAgICAgew0KICAgICAgICAgICAgbmFtZTogJ+e0r+iuoeehruiviicsDQogICAgICAgICAgICB0eXBlOiAnYmFyJywNCiAgICAgICAgICAgIGJhckdhcDogJy0xMDAlJywNCiAgICAgICAgICAgIGJhcldpZHRoOiAxMCwNCiAgICAgICAgICAgIGl0ZW1TdHlsZTogew0KICAgICAgICAgICAgICBub3JtYWw6IHsNCiAgICAgICAgICAgICAgICBiYXJCb3JkZXJSYWRpdXM6IDUsDQogICAgICAgICAgICAgICAgY29sb3I6IG5ldyBlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoDQogICAgICAgICAgICAgICAgICAwLCAwLCAwLCAxLA0KICAgICAgICAgICAgICAgICAgWw0KICAgICAgICAgICAgICAgICAgICB7IG9mZnNldDogMCwgY29sb3I6ICdyZ2JhKDExOSw2MCwyNDMsMC43KScgfSwNCiAgICAgICAgICAgICAgICAgICAgeyBvZmZzZXQ6IDAuMywgY29sb3I6ICdyZ2JhKDExOSw2MCwyNDMsMC41KScgfSwNCiAgICAgICAgICAgICAgICAgICAgeyBvZmZzZXQ6IDEsIGNvbG9yOiAncmdiYSgxMTksNjAsMjQzLDApJyB9DQogICAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgICAgKQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgejogLTEyLA0KICAgICAgICAgICAgZGF0YTogdGhpcy5kYXRhLmNvbmZpcm1lZENvdW50TGlzdA0KICAgICAgICAgIH0sDQogICAgICAgIF0NCiAgICAgIH0NCiAgICAgIGNoYXJ0LnNldE9wdGlvbihvcHRpb24pDQogICAgfQ0KICB9LA0KICB3YXRjaDogew0KICAgIGRhdGE6IHsNCiAgICAgIGhhbmRsZXIgKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgew0KICAgICAgICBpZiAob2xkVmFsdWUgIT0gbmV3VmFsdWUpIHsNCiAgICAgICAgICB0aGlzLnNldE9wdGlvbnMoKQ0KICAgICAgICB9DQogICAgICB9LA0KICAgICAgZGVlcDogdHJ1ZQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/CurrentConfirmedCompareBarChart","sourcesContent":["<template>\r\n  <div\r\n    ref=\"currentConfirmedComoareBarChart\"\r\n    style=\"width: 100%; height: 100%\"\r\n  ></div>\r\n</template>\r\n<script>\r\nimport * as echarts from 'echarts'\r\nlet chart = null\r\nexport default {\r\n  props: {\r\n    title: String,\r\n    data: Object\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      if (null != chart && undefined != chart) {\r\n        chart.dispose()\r\n      }\r\n      chart = this.$echarts.init(this.$refs.currentConfirmedComoareBarChart)\r\n      this.setOptions()\r\n    },\r\n    setOptions() {\r\n      let option = {\r\n        title: {\r\n          text: this.title,\r\n          x: 'center',\r\n          y: 0,\r\n          textStyle: {\r\n            color: '#B4B4B4',\r\n            fontSize: 14,\r\n            fontWeight: 'normal',\r\n          },\r\n\r\n        },\r\n        // backgroundColor: '#191E40',\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          backgroundColor: 'rgba(255,255,255,0.9)',\r\n          axisPointer: {\r\n            type: 'shadow',\r\n            label: {\r\n              show: true,\r\n              backgroundColor: '#7B7DDC'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['累计治愈', '累计确诊'],\r\n          textStyle: {\r\n            color: '#B4B4B4'\r\n          },\r\n          top: '5%',\r\n        },\r\n        grid: {\r\n          x: '12%',\r\n          width: '82%',\r\n          y: '12%',\r\n        },\r\n        xAxis: {\r\n          data: this.data.dateList,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#B4B4B4'\r\n            }\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n        },\r\n        yAxis: [{\r\n          splitLine: { show: false },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#B4B4B4',\r\n            }\r\n          },\r\n          axisLabel: {\r\n            formatter: '{value} ',\r\n          }\r\n        },\r\n        {\r\n          splitLine: { show: false },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#B4B4B4',\r\n            }\r\n          },\r\n          axisLabel: {\r\n            formatter: '{value} ',\r\n          }\r\n        }],\r\n        series: [\r\n          {\r\n            name: '累计治愈',\r\n            type: 'bar',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              normal: {\r\n                barBorderRadius: 5,\r\n                color: new echarts.graphic.LinearGradient(\r\n                  0, 0, 0, 1,\r\n                  [\r\n                    { offset: 0, color: '#956FD4' },\r\n                    { offset: 1, color: '#3EACE5' }\r\n                  ]\r\n                )\r\n              }\r\n            },\r\n            data: this.data.curedCountList\r\n          },\r\n          {\r\n            name: '累计确诊',\r\n            type: 'bar',\r\n            barGap: '-100%',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              normal: {\r\n                barBorderRadius: 5,\r\n                color: new echarts.graphic.LinearGradient(\r\n                  0, 0, 0, 1,\r\n                  [\r\n                    { offset: 0, color: 'rgba(119,60,243,0.7)' },\r\n                    { offset: 0.3, color: 'rgba(119,60,243,0.5)' },\r\n                    { offset: 1, color: 'rgba(119,60,243,0)' }\r\n                  ]\r\n                )\r\n              }\r\n            },\r\n            z: -12,\r\n            data: this.data.confirmedCountList\r\n          },\r\n        ]\r\n      }\r\n      chart.setOption(option)\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler (newValue, oldValue) {\r\n        if (oldValue != newValue) {\r\n          this.setOptions()\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>"]}]}