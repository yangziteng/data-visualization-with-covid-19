{"remainingRequest":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\ProvinceRankingBarChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\src\\components\\ProvinceRankingBarChart\\index.vue","mtime":1674316079898},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\babel-loader\\lib\\index.js","mtime":1678158409280},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678158406718},{"path":"C:\\Users\\86158\\Desktop\\12-23疫情数据分析一月中旬\\covid19\\data-visualization-with-covid-19\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1678158409891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnDQpsZXQgY2hhcnQgPSBudWxsDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgZGF0YTogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgZGVmYXVsdCAoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgcHJvdmluY2VMaXN0OiBbXSwNCiAgICAgICAgICB2YWx1ZUxpc3Q6IFtdDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBpbml0Q2hhcnQgKCkgew0KICAgICAgaWYgKG51bGwgIT0gY2hhcnQgJiYgdW5kZWZpbmVkICE9IGNoYXJ0KSB7DQogICAgICAgIGNoYXJ0LmRpc3Bvc2UoKQ0KICAgICAgfQ0KICAgICAgY2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5wcm92aW5jZVJhbmtpbmdCYXJDaGFydCkNCiAgICAgIHRoaXMuc2V0T3B0aW9ucygpDQogICAgfSwNCiAgICBzZXRPcHRpb25zKCkgew0KICAgICAgdmFyIHNhbHZQcm9WYWx1ZSA9IHRoaXMuZGF0YS52YWx1ZUxpc3Q7DQogICAgICB2YXIgc2FsdlByb01heCA9IFtdOy8v6IOM5pmv5oyJ5pyA5aSn5YC8DQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNhbHZQcm9WYWx1ZS5sZW5ndGg7IGkrKykgew0KICAgICAgICBzYWx2UHJvTWF4LnB1c2goc2FsdlByb1ZhbHVlWzBdKQ0KICAgICAgfQ0KICAgICAgbGV0IG9wdGlvbiA9IHsNCiAgICAgICAgLy8gYmFja2dyb3VuZENvbG9yOiAiIzAwMzM2NiIsDQogICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICBsZWZ0OiAnMiUnLA0KICAgICAgICAgIHJpZ2h0OiAnMiUnLA0KICAgICAgICAgIGJvdHRvbTogJzIlJywNCiAgICAgICAgICB0b3A6ICcyJScsDQogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlDQogICAgICAgIH0sDQogICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsDQogICAgICAgICAgYXhpc1BvaW50ZXI6IHsNCiAgICAgICAgICAgIHR5cGU6ICdub25lJw0KICAgICAgICAgIH0sDQogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAocGFyYW1zKSB7DQogICAgICAgICAgICByZXR1cm4gcGFyYW1zWzBdLm5hbWUgKyAnIDogJyArIHBhcmFtc1swXS52YWx1ZQ0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgeEF4aXM6IHsNCiAgICAgICAgICBzaG93OiBmYWxzZSwNCiAgICAgICAgICB0eXBlOiAndmFsdWUnDQogICAgICAgIH0sDQogICAgICAgIHlBeGlzOiBbew0KICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsDQogICAgICAgICAgaW52ZXJzZTogdHJ1ZSwNCiAgICAgICAgICBheGlzTGFiZWw6IHsNCiAgICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgICB0ZXh0U3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICB9LA0KICAgICAgICAgIHNwbGl0TGluZTogew0KICAgICAgICAgICAgc2hvdzogZmFsc2UNCiAgICAgICAgICB9LA0KICAgICAgICAgIGF4aXNUaWNrOiB7DQogICAgICAgICAgICBzaG93OiBmYWxzZQ0KICAgICAgICAgIH0sDQogICAgICAgICAgYXhpc0xpbmU6IHsNCiAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgfSwNCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEucHJvdmluY2VMaXN0DQogICAgICAgIH0sIHsNCiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLA0KICAgICAgICAgIGludmVyc2U6IHRydWUsDQogICAgICAgICAgYXhpc1RpY2s6ICdub25lJywNCiAgICAgICAgICBheGlzTGluZTogJ25vbmUnLA0KICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgYXhpc0xhYmVsOiB7DQogICAgICAgICAgICB0ZXh0U3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmZmZmJywNCiAgICAgICAgICAgICAgZm9udFNpemU6ICcxMicNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgICBkYXRhOiBzYWx2UHJvVmFsdWUNCiAgICAgICAgfV0sDQogICAgICAgIHNlcmllczogW3sNCiAgICAgICAgICBuYW1lOiAn5YC8JywNCiAgICAgICAgICB0eXBlOiAnYmFyJywNCiAgICAgICAgICB6bGV2ZWw6IDEsDQogICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICBub3JtYWw6IHsNCiAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiAzMCwNCiAgICAgICAgICAgICAgY29sb3I6IG5ldyBlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwgMCwgMSwgMCwgW3sNCiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsDQogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2IoMiwxNjMsMjU0LDEpJw0KICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgb2Zmc2V0OiAxLA0KICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiKDEyNSw2NCwyNTUsMSknDQogICAgICAgICAgICAgIH1dKSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgICBiYXJXaWR0aDogMjAsDQogICAgICAgICAgZGF0YTogc2FsdlByb1ZhbHVlDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBuYW1lOiAn6IOM5pmvJywNCiAgICAgICAgICB0eXBlOiAnYmFyJywNCiAgICAgICAgICBiYXJXaWR0aDogMjAsDQogICAgICAgICAgYmFyR2FwOiAnLTEwMCUnLA0KICAgICAgICAgIGRhdGE6IHNhbHZQcm9NYXgsDQogICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICBub3JtYWw6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDI0LDMxLDY4LDEpJywNCiAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiAzMCwNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgICBdDQogICAgICB9DQogICAgICBjaGFydC5zZXRPcHRpb24ob3B0aW9uKQ0KICAgIH0NCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICBkYXRhOiB7DQogICAgICBoYW5kbGVyKG5ld0xpc3QsIG9sZExpc3QpIHsNCiAgICAgICAgaWYgKG9sZExpc3QgIT0gbmV3TGlzdCkgew0KICAgICAgICAgIHRoaXMuc2V0T3B0aW9ucygpDQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICBkZWVwOiB0cnVlDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ProvinceRankingBarChart","sourcesContent":["<template>\r\n  <div\r\n    ref=\"provinceRankingBarChart\"\r\n    style=\"width: 100%; height: 100%\"\r\n    />\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nlet chart = null\r\nexport default {\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default () {\r\n        return {\r\n          provinceList: [],\r\n          valueList: []\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      if (null != chart && undefined != chart) {\r\n        chart.dispose()\r\n      }\r\n      chart = this.$echarts.init(this.$refs.provinceRankingBarChart)\r\n      this.setOptions()\r\n    },\r\n    setOptions() {\r\n      var salvProValue = this.data.valueList;\r\n      var salvProMax = [];//背景按最大值\r\n      for (let i = 0; i < salvProValue.length; i++) {\r\n        salvProMax.push(salvProValue[0])\r\n      }\r\n      let option = {\r\n        // backgroundColor: \"#003366\",\r\n        grid: {\r\n          left: '2%',\r\n          right: '2%',\r\n          bottom: '2%',\r\n          top: '2%',\r\n          containLabel: true\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'none'\r\n          },\r\n          formatter: function (params) {\r\n            return params[0].name + ' : ' + params[0].value\r\n          }\r\n        },\r\n        xAxis: {\r\n          show: false,\r\n          type: 'value'\r\n        },\r\n        yAxis: [{\r\n          type: 'category',\r\n          inverse: true,\r\n          axisLabel: {\r\n            show: true,\r\n            textStyle: {\r\n              color: '#fff'\r\n            },\r\n          },\r\n          splitLine: {\r\n            show: false\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          data: this.data.provinceList\r\n        }, {\r\n          type: 'category',\r\n          inverse: true,\r\n          axisTick: 'none',\r\n          axisLine: 'none',\r\n          show: true,\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: '#ffffff',\r\n              fontSize: '12'\r\n            },\r\n          },\r\n          data: salvProValue\r\n        }],\r\n        series: [{\r\n          name: '值',\r\n          type: 'bar',\r\n          zlevel: 1,\r\n          itemStyle: {\r\n            normal: {\r\n              barBorderRadius: 30,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                offset: 0,\r\n                color: 'rgb(2,163,254,1)'\r\n              }, {\r\n                offset: 1,\r\n                color: 'rgb(125,64,255,1)'\r\n              }]),\r\n            },\r\n          },\r\n          barWidth: 20,\r\n          data: salvProValue\r\n        },\r\n        {\r\n          name: '背景',\r\n          type: 'bar',\r\n          barWidth: 20,\r\n          barGap: '-100%',\r\n          data: salvProMax,\r\n          itemStyle: {\r\n            normal: {\r\n              color: 'rgba(24,31,68,1)',\r\n              barBorderRadius: 30,\r\n            }\r\n          },\r\n        },\r\n        ]\r\n      }\r\n      chart.setOption(option)\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler(newList, oldList) {\r\n        if (oldList != newList) {\r\n          this.setOptions()\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>"]}]}